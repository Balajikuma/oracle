CREATE TABLE SQL_BATCH (ID_NO CHAR(3), EMPLOYEE_NAME VARCHAR2(20), CONTACT NUMBER, ADDRESS VARCHAR2(30));
SELECT * FROM SQL_BATCH;
ALTER TABLE SQL_BATCH MODIFY CONTACT NUMBER;

DESC SQL_BATCH;

INSERT INTO SQL_BATCH VALUES (001, 'PRABHU', 1234567890, 'CHENNAI');

ALTER TABLE SQL_BATCH MODIFY ADDRESS VARCHAR2(30);

INSERT INTO SQL_BATCH (ID_NO, EMPLOYEE_NAME, CONTACT, ADDRESS, SALARY) VALUES (&ID_NO, &EMPLOYEE_NAME, &CONTACT, &ADDRESS, &SALARY);

UPDATE SQL_BATCH SET ADDRESS = 'TRICHY' WHERE ID_NO = '4';

COMMIT;

ALTER TABLE SQL_BATCH ADD SALARY NUMBER;

UPDATE SQL_BATCH SET SALARY = 157800 WHERE ID_NO=1;
UPDATE SQL_BATCH SET SALARY = 15700 WHERE ID_NO=2;
UPDATE SQL_BATCH SET SALARY = 55700 WHERE ID_NO=3;
UPDATE SQL_BATCH SET SALARY = 75700 WHERE ID_NO=4;
UPDATE SQL_BATCH SET SALARY = 65000 WHERE ID_NO=5;

ALTER TABLE SQL_BATCH ADD PIN_CODE NUMBER DEFAULT '621801';

ALTER TABLE SQL_BATCH DROP COLUMN PIN_CODE;

CREATE TABLE DUMMY_T1 (SL_NO NUMBER, NAMES VARCHAR2(10), DEPT VARCHAR(20));
SELECT * FROM DUMMY_T1;

INSERT INTO DUMMY_T1 (SL_NO, NAMES, DEPT) VALUES (&SL_NO, &NAMES, &DEPT);

DROP TABLE DUMMY_T1;

FLASHBACK TABLE DUMMY_T1 TO BEFORE DROP;

PURGE TABLE DUMMY_T1;

DCL;

SELECT * FROM TAB;

GRANT SELECT ON SQL_BATCH TO SYSTEM;

REVOKE SELECT ON SQL_BATCH FROM SYSTEM;

SELECT * FROM SQL_BATCH;

ALTER TABLE SQL_BATCH ADD NEW_SALARY NUMBER;

UPDATE SQL_BATCH SET NEW_SALARY = SALARY;

ROLLBACK;

ALTER TABLE SQL_BATCH DROP COLUMN SALARY; 

ALTER TABLE SQL_BATCH RENAME COLUMN NEW_SALARY TO SALARY;

DESC SQL_BATCH;

SELECT * FROM TAB;

SELECT * FROM EMPLOYEES;

SELECT * FROM EMPLOYEES WHERE SALARY IN (4500, 7000, 17000);
SELECT FIRST_NAME, LAST_NAME, HIRE_DATE FROM EMPLOYEES WHERE SALARY NOT IN (4800,4200,14000);
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN (60,90);
SELECT EMPLOYEE_ID, FIRST_NAME FROM EMPLOYEES WHERE JOB_ID IN ('AD_VP', 'IT_PROG') AND SALARY > 4000; 

SELECT * FROM EMPLOYEES WHERE SALARY BETWEEN 4800 AND 17000;
SELECT * FROM EMPLOYEES WHERE HIRE_DATE NOT BETWEEN '17-06-03' AND '21-05-06';

SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE 'B___e';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '%$_%' ESCAPE '$';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '%a%a%';

SELECT * FROM EMPLOYEES WHERE SALARY >ALL (2000,5000,16999);
SELECT EMPLOYEE_ID, FIRST_NAME,LAST_NAME FROM EMPLOYEES WHERE SALARY <ALL(5600,17000);
SELECT * FROM EMPLOYEES WHERE SALARY >ANY (9000,15000,16999);

SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID >= '90';

SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID IN (80,90,70);

SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE 'Steven';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME LIKE '%e';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME NOT LIKE '%a';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME = 'Steven';
SELECT * FROM EMPLOYEES WHERE FIRST_NAME ='Steven' AND SALARY > 20000;

SELECT * FROM EMPLOYEES WHERE MANAGER_ID is not NULL;

CREATE TABLE NULL_TABLE (NAME VARCHAR2(20), SALARY NUMBER, COMMISSION NUMBER);
SELECT * FROM null_table;
DESC null_table;

SELECT NAME,SALARY, NVL(GROSS, 0) AS GROSS_SAL FROM NULL_TABLE;
SELECT NAME, SALARY, PF, NVL2(PF, SALARY+PF, SALARY) TOTAL_SALARY FROM NULL_TABLE; 
SELECT NAME, SALARY,GROSS,SALARY +NVL(GROSS, 700) BONUS FROM NULL_TABLE;
SELECT NAME,SALARY,GROSS, COMMISSION, NULLIF(GROSS, COMMISSION) COMPARE FROM NULL_TABLE;
SELECT NAME, GROSS,SALARY,COMMISSION,PF, COALESCE (GROSS, SALARY, COMMISSION) FROM NULL_TABLE;

SELECT 15*5 FROM DUAL;
DESC DUAL;
SELECT * FROM DUAL;
SELECT 'PRABU MANI' FROM DUAL;

SELECT * FROM DEPARTMENTS;
SELECT * FROM EMPLOYEES;
SELECT * FROM LOCATIONS;

SELECT D.DEPARTMENT_NAME, E.SALARY
FROM DEPARTMENTS D INNER JOIN EMPLOYEES E
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID 
WHERE SALARY >3000 AND DEPARTMENT_NAME = 'Executive';


SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;
COMMIT;
SELECT * FROM EMPLOYEE E INNER JOIN DEPARTMENT D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT * FROM EMPLOYEE E LEFT OUTER JOIN DEPARTMENT D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE DEPARTMENT_NAME IS NOT NULL;

SELECT E.FIRST_NAME,E.DEPARTMENT_ID,D.DEPARTMENT_ID, D.DEPARTMENT_NAME,L.LOCATION_ID,L.CITY
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID LEFT OUTER JOIN LOCATIONS L
ON D.DEPARTMENT_ID = L.LOCATION_ID;

SELECT * FROM NULL_TABLE;
SELECT * FROM NULL_TABLE2;

SELECT * FROM NULL_TABLE3;
CREATE TABLE NULL_TABLE3 (NAME1 VARCHAR2(10), NUMBERS1 VARCHAR2(20));
INSERT INTO NULL_TABLE2 VALUES ('1','');


SELECT * FROM EMPLOYEE;
SELECT * FROM DEPARTMENT;

SELECT * FROM DEPARTMENT D LEFT OUTER JOIN EMPLOYEE E
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID;

SELECT * FROM EMPLOYEE E RIGHT OUTER JOIN DEPARTMENT D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;


SELECT * FROM EMPLOYEES;

SELECT
    salary,
    commission_pct,
    nvl2(commission_pct, salary + 500 + (salary * commission_pct+0.02), salary + 500 + salary * 0.05) result
FROM
    employees;



SELECT SALARY,COMMISSION_PCT, NVL (COMMISSION_PCT,SALARY+1000) FROM EMPLOYEES;
SELECT SALARY,COMMISSION_PCT, NVL (COMMISSION_PCT, SALARY+1000) FROM EMPLOYEES;

CREATE TABLE T1(ID_1 VARCHAR2(10), ID_2 VARCHAR2(10), ID_3 VARCHAR2(10));
SELECT * FROM T1;
INSERT INTO T1 VALUES (3,6,9);

SELECT ID_1 FROM T1 UNION ALL SELECT ID_2 FROM T1 UNION ALL SELECT ID_3 FROM T1;

SELECT * FROM TAB;

SELECT * FROM EMPLOYEES;

INSERT INTO SQL_BATCH VALUES (6, 'LIYA', 4560007891, 'PONDICHERRY', 88000);
SELECT FIRST_NAME FROM EMPLOYEES WHERE FIRST_NAME LIKE 'A%' OR FIRST_NAME LIKE 'C%' OR FIRST_NAME LIKE 'S%';
SELECT * FROM EMPLOYEES;
SELECT FIRST_NAME FROM EMPLOYEES WHERE FIRST_NAME NOT LIKE '%a%';
SELECT FIRST_NAME FROM EMPLOYEES WHERE FIRST_NAME LIKE '[ACS]%';
SELECT * FROM EMPLOYEES;

SELECT COUNT(COMMISSION_PCT) FROM EMPLOYEES;
SELECT COUNT(*)FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL;

SELECT COUNT(*), JOB_ID FROM EMPLOYEES WHERE JOB_ID NOT IN 'IT_PROG'
GROUP BY JOB_ID;

SELECT MAX(SALARY), JOB_ID FROM EMPLOYEES GROUP BY JOB_ID;

SELECT JOB_ID , MAX(SALARY) FROM EMPLOYEES GROUP BY JOB_ID;

SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;

SELECT MAX(E.SALARY), DEPARTMENT_NAME
FROM EMPLOYEES E FULL OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY DEPARTMENT_NAME; /* IT FETCHES ALONG WITH NULL VALUES*/

SELECT MAX(E.SALARY), DEPARTMENT_NAME
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY DEPARTMENT_NAME; /* IT FETCHES WITHOUT NULL VALUES*/

SELECT AVG(E.SALARY),D.DEPARTMENT_NAME
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME
HAVING DEPARTMENT_NAME = 'Executive';

CREATE TABLE AREA (ID NUMBER, NAME VARCHAR2(10), LOCATION VARCHAR2(20));
INSERT INTO AREA VALUES(100,'', 'ARIYALUR');
SELECT * FROM AREA;

SELECT ID,NAME, NVL(LOCATION, 'ARIYALUR') LOCATION FROM AREA WHERE NAME='PRABU';

SELECT MAX(ID),MAX(NAME), MAX(LOCATION) FROM AREA;

SELECT COALESCE(NAME,LOCATION) FROM AREA;

SELECT * FROM T1;
SELECT MAX(GREATEST(ID_1,ID_2,ID_3))RES FROM T1;

WITH RES AS
(SELECT ID_1 FROM T1 UNION ALL SELECT ID_2 FROM T1 UNION ALL SELECT ID_3 FROM T1)
SELECT MAX(ID_1) FROM RES;

SELECT * FROM EMPLOYEES;
SELECT * FROM DEPARTMENTS;

SELECT D.DEPARTMENT_NAME,COUNT(*) TAB FROM EMPLOYEES E INNER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME;


WITH RESULT AS
(SELECT D.DEPARTMENT_NAME,COUNT(*) FROM EMPLOYEES E INNER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_NAME
ORDER BY COUNT(*) DESC)
SELECT * FROM RESULT WHERE ROWNUM < 10;
SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE ROWNUM < 2;



WITH EMP AS(SELECT D.DEPARTMENT_NAME,COUNT(*) OVER(PARTITION BY D.DEPARTMENT_NAME ORDER BY D.DEPARTMENT_NAME DESC ) EMPCOUNT 
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID=D.DEPARTMENT_ID)
SELECT * FROM EMP WHERE ROWNUM=1;


/*Task 1. Find the Second Highest Salary from Department_Id - 90*/
WITH RES AS (SELECT FIRST_NAME,SALARY FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90
ORDER BY SALARY DESC) 
SELECT * FROM RES WHERE ROWNUM = 2;

/*Task 2. Find the 3rd Highest Salary from Employees table*/

--task 3. Find the Employee who joined first from Employee Table.
WITH RANK AS(SELECT FIRST_NAME,HIRE_DATE,DENSE_RANK()OVER(ORDER BY HIRE_DATE) RANK FROM EMPLOYEES)
SELECT * FROM RANK WHERE ROWNUM=1;

/*Task 4 -- Count of Location South Lake*/
SELECT COUNT(CITY) FROM LOCATIONS WHERE CITY = 'Southlake';

/*Task 5 GET Department Id wise Average of salary*/
SELECT AVG(SALARY), DEPARTMENT_ID FROM EMPLOYEES GROUP BY DEPARTMENT_ID;

/* Task 6 Department Name wise MAX of salary*/
SELECT D.DEPARTMENT_NAME,MAX(E.SALARY) FROM EMPLOYEES E INNER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID 
GROUP BY D.DEPARTMENT_NAME;

/*Task 7 How many employee working in executive department*/
SELECT DEPARTMENT_NAME,COUNT(*) FROM EMPLOYEES E INNER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY DEPARTMENT_NAME
HAVING DEPARTMENT_NAME = 'Executive';

SELECT * FROM NUM;

--IMPORTANT QUERY 
SELECT COUNT(*), ANS FROM NUM GROUP BY ANS HAVING COUNT(*) > 1;
SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID=:X;


SELECT PHONE_NUMBER FROM EMPLOYEES WHERE PHONE_NUMBER LIKE '___.___.____';

SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE MOD(EMPLOYEE_ID,2) = 0;
SELECT * FROM EMPLOYEES WHERE MOD(EMPLOYEE_ID,2) =0;

SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE MOD(EMPLOYEE_ID,2) = 1;

CREATE TABLE MEMBERS (ID NUMBER, NAMES VARCHAR2(20), LOCATION VARCHAR2(20), GENDER VARCHAR2(10));
INSERT INTO MEMBERS (ID,NAMES,LOCATION,GENDER) VALUES (004,'DHANAM', 'TRICHY', 'FEMALE');
SELECT * FROM MEMBERS;
SELECT ID,NAMES,GENDER,CASE WHEN GENDER = 'FEMALE' THEN 'MALE'
WHEN GENDER ='MALE' THEN 'FEMALE' END AS RESULT
FROM MEMBERS;

SELECT ID,NAMES,GENDER,DECODE(GENDER,'MALE', 'FEMALE', 'FEMALE', 'MALE') RESULT FROM MEMBERS;


SELECT FIRST_NAME,SALARY,CASE WHEN SALARY >=10000
THEN (SALARY+500+NVL2(COMMISSION_PCT,SALARY*COMMISSION_PCT+0.02,SALARY*0.02))
WHEN SALARY <10000 THEN (SALARY+500) END AS RESULT FROM EMPLOYEES;

SELECT FIRST_NAME,SALARY,CASE WHEN SALARY >=10000 AND COMMISSION_PCT IS NOT NULL 
THEN SALARY+500+SALARY*(COMMISSION_PCT+0.02) WHEN SALARY >=10000 AND COMMISSION_PCT IS NULL 
THEN SALARY+500+SALARY*0.02 WHEN SALARY <10000 THEN SALARY+500 END AS TOTAL_SALARY
FROM EMPLOYEES;

select * from employees;
SELECT DISTINCT DEPARTMENT_ID,JOB_ID FROM EMPLOYEES;
select department_id,j.Job_id from employees e left join jobs j
on e.job_id=j.job_id where Department_id is null;
SELECT EMPLOYEE_ID,FIRST_NAME,SALARY+50 FROM EMPLOYEES;
SELECT employee_id,first_name,CASE WHEN salary IS NOT NULL THEN salary + 50
END AS newsalary
from employees;

SELECT first_name,department_id from employees where department_id in(60,90,100);
select first_name,d.department_id from employees e join departments d on e.department_id=d.department_id
where d.department_id in(60,90,100);

SELECT first_name,salary,hire_date,CASE WHEN salary IS NOT NULL THEN salary * 12
END AS annualsalary
FROM employees;

select department_id,salary,hire_date from employees where first_name='Alberto';


